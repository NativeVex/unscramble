'use strict';

var _get = require('babel-runtime/helpers/get')['default'];

var _inherits = require('babel-runtime/helpers/inherits')['default'];

var _createClass = require('babel-runtime/helpers/create-class')['default'];

var _classCallCheck = require('babel-runtime/helpers/class-call-check')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _lodash = require('lodash');

var TableList = (function (_Component) {
  _inherits(TableList, _Component);

  _createClass(TableList, null, [{
    key: 'propTypes',
    value: {
      items: _react.PropTypes.array.isRequired,
      // events
      onFocus: _react.PropTypes.func,
      onBlur: _react.PropTypes.func,
      onKeypress: _react.PropTypes.func
    },
    enumerable: true
  }, {
    key: 'contextTypes',
    value: {
      theme: _react.PropTypes.object.isRequired
    },
    enumerable: true
  }]);

  function TableList(props) {
    _classCallCheck(this, TableList);

    _get(Object.getPrototypeOf(TableList.prototype), 'constructor', this).call(this, props);

    this.state = { focused: false };
  }

  _createClass(TableList, [{
    key: 'selected',
    value: function selected() {
      if (this.refs.list) return this.refs.list.selected;
      return 0;
    }
  }, {
    key: 'focus',
    value: function focus() {
      this.refs.list.focus();
    }
  }, {
    key: 'handleFocus',
    value: function handleFocus() {
      this.setState({ focused: true });
      if (this.props.onFocus) this.props.onFocus();
    }
  }, {
    key: 'handleBlur',
    value: function handleBlur() {
      this.setState({ focused: false });
      if (this.props.onBlur) this.props.onBlur();
    }
  }, {
    key: 'handleKeypress',
    value: function handleKeypress(ch, key) {
      if (this.props.onKeypress) this.props.onKeypress(ch, key);
      switch (key.full) {
        case 'tab':
          this.refs.list.screen.focusNext();
          break;
        case 'S-tab':
          this.refs.list.screen.focusPrev();
          break;
        default:
          return false;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var items = this.props.items;
      var theme = this.context.theme;

      return _react2['default'].createElement('list', {
        keys: true, mouse: true, scrollbar: true,
        ref: 'list',
        border: 'line',
        label: ' Tables ',
        style: this.state.focused ? (0, _lodash.merge)({}, theme.list.normal, theme.list.focus) : theme.list.normal,
        onFocus: this.handleFocus.bind(this),
        onBlur: this.handleBlur.bind(this),
        onKeypress: this.handleKeypress.bind(this),
        items: items
      });
    }
  }]);

  return TableList;
})(_react.Component);

exports['default'] = TableList;
module.exports = exports['default'];