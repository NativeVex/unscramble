'use strict';

var _extends = require('babel-runtime/helpers/extends')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _lodash = require('lodash');

var _actionsServers = require('../actions/servers');

var initialState = {
  isFetching: false,
  didInvalidate: true,
  items: [],
  error: null
};

exports['default'] = function (state, action) {
  if (state === undefined) state = initialState;

  switch (action.type) {
    case _actionsServers.FETCH_SERVERS_REQUEST:
      {
        return _extends({}, state, { isFetching: true, didInvalidate: false, error: null });
      }
    case _actionsServers.FETCH_SERVERS_SUCCESS:
      {
        return _extends({}, state, { isFetching: false, items: action.servers });
      }
    case _actionsServers.FETCH_SERVERS_FAILURE:
      {
        return _extends({}, initialState, {
          error: action.error
        });
      }
    case _actionsServers.SAVE_SERVER_SUCCESS:
      {
        var _ret = (function () {
          var found = false;
          var server = (0, _lodash.merge)({}, action.server);
          var items = state.items.map(function (item) {
            if (item.id !== server.id) return item;
            found = true;
            return server;
          });
          if (!found) items.push(server);
          return {
            v: _extends({}, state, { items: items })
          };
        })();

        if (typeof _ret === 'object') return _ret.v;
      }
    case _actionsServers.REMOVE_SERVER:
      {
        var items = state.items.filter(function (item) {
          return item.id !== action.id;
        });
        return _extends({}, state, { items: items });
      }
    default:
      return state;
  }
};

module.exports = exports['default'];